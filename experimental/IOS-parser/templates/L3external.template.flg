/*
 * Basic functionality for handling external (non-directly attached) subnets.
 *
 * The core of this module is a routing table with a list of subnets and their
 * corresponding gateway's IP address.
 *
 *
 * TODO:
 *  - expose routes as an external table which is managed by Quagga
 *  - should issue ARP requests for every nexthop (gateway) IP
 *    automatically, rather than requiring they be entered into the cached
 *    relation by hand at startup.
 */

/*******************************************************************************
 *
 * Data Structures
 *
 ******************************************************************************/

// Routing table for non-directly attached subnets
//
// Column values:
// subnet, mask, next-hop IP
TABLE routes(ipaddr, int, ipaddr);

/*******************************************************************************
 *
 * L3 routing to non-directly attached subnets
 *
 * TODO(adf): would be great if NAT were not explicitly considered here
 *
 ******************************************************************************/

// packets destined to outside whose source does NOT need NATing

ON ip_packet(pkt):
  DO forward(new) WHERE

    // generic nexthop IP selection
    // routes(addr, mask, nexthop)
    // and pkt.nwDst IN addr/mask

    // templated nexthop IP selection
    @nexthop-fragment
    AND
    // not in a local subnet for this router
    NOT (@dst-local-subnet)

    and subnets(nexthop_subnet, nexthop_mask, ANY, new.dlSrc, pkt.locSw, new.locPt, ANY)
    and nexthop IN nexthop_subnet/nexthop_mask
    and cached(nexthop, new.dlDst) // MAC addr of nexthop IP

    // don't route packets which need NAT'ing
    and NOT @needs-nat-disj
    //and needs_nat(needs_nat_subnet, needs_nat_mask)
    //and NOT (pkt.nwSrc IN needs_nat_subnet/needs_nat_mask)
    ;

/*******************************************************************************
 *
 * Per-subnet translators: outbound path to nexthop MAC addr where destination
 * MAC address is already set.
 *
 ******************************************************************************/

ON ip_packet(pkt):
  DO forward(new) WHERE

    // TODO(adf): generic nexthop-related code

    // templated nexthop IP selection

    @nexthop-fragment-for-tr

    and subnets(nexthop_subnet, nexthop_mask, ANY, gwmac, router, ANY, pkt.locSw)
    and nexthop IN nexthop_subnet/nexthop_mask
    and cached(nexthop, pkt.dlDst)
    and pkt.dlSrc = gwmac
    and pkt.nwDst != nexthop // this case is handled by internal routing
    and pkt.locPt = 1
    and new.locPt = 2;
