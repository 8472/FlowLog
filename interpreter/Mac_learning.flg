packet = {LocSw, LocPt, DlSrc, DlDst, DlTyp, NwSrc, NwDst, NwProto};
switch_port = {Sw, Pt};

+learned(Pkt : packet, Sw, Pt, Mac) :-
Pkt.LocSw = Sw,
Pkt.DlSrc = Mac,
Pkt.LocPt = Pt;

-learned(Pkt : packet, Sw, Pt, Mac) :-
Pkt.LocSw = Sw,
Pkt.DlSrc = Mac,
not Pkt.LocPt = Pt;

forward(Pkt : packet, Nwpkt : packet) :-
learned(Pkt.LocSw, Nwpkt.LocPt, Pkt.DlDst);

+switch_has_port(Sw_pt : switch_port, Sw, Pt) :-
Sw_pt.Sw = Sw,
Sw_pt.Pt = Pt;

forward(Pkt : packet, Nwpkt : packet) :-
switch_has_port(Pkt.LocSw, Nwpkt.LocPt),
not learned(Pkt.LocSw, Any, Pkt.DlDst),
not Pkt.LocPt = Nwpkt.LocPt;