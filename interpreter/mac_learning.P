:- auto_table.

% the rules of the program

plus_learned(LocSw, LocPt, DlSrc, DlDst, DlTyp, NwSrc, NwDst, NwProto, Sw, Pt, Mac):-
LocSw = Sw,
DlSrc = Mac,
LocPt = Pt.

minus_learned(LocSw, LocPt, DlSrc, DlDst, DlTyp, NwSrc, NwDst, NwProto, Sw, Pt, Mac):-
LocSw = Sw,
DlSrc = Mac,
not(LocPt = Pt).

emit(LocSw, LocPt, DlSrc, DlDst, DlTyp, NwSrc, NwDst, NwProto, LocSw2, LocPt2, DlSrc2, DlDst2, DlTyp2, NwSrc2, NwDst2, NwProto2):-
learned(LocSw, LocPt2, DlDst),
LocSw = LocSw2,
DlSrc = DlSrc2,
DlDst = DlDst2,
DlTyp = DlTyp2,
NwSrc = NwSrc2,
NwDst = NwDst2,
NwProto = NwProto2.

emit(LocSw, LocPt, DlSrc, DlDst, DlTyp, NwSrc, NwDst, NwProto, LocSw2, LocPt2, DlSrc2, DlDst2, DlTyp2, NwSrc2, NwDst2, NwProto2):-
LocSw = LocSw2,
DlSrc = DlSrc2,
DlDst = DlDst2,
DlTyp = DlTyp2,
NwSrc = NwSrc2,
NwDst = NwDst2,
NwProto = NwProto2,

% without this constraint, but with the !=, prolog gets confused.
% since it can't give _hblah for LocPt2 (it can't be everything!)
% now we've scoped it: it's the ports attached to the current switch
% declared below.
switchHasPorts(LocSw2, LocPt2),

% The not(...) works now, but there's a nice != notation, "\="
%not(LocPt = LocPt2),
LocPt \= LocPt2,
not(learned(LocSw, Any, DlDst)).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% current state
% switch, port, mac
%learned(1, 5, 4).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% need this so that we can flood properly. this relation will be fixed for all time when we load.
switchHasPorts(1, 1).
switchHasPorts(1, 2).
switchHasPorts(1, 3).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% test rule 1:
% dest = 4, switch = 1. should result in port 5.
%emit(1,2,3,4,5,6,7,8, LocSw2, LocPt2, DlSrc2, DlDst2, DlTyp2, NwSrc2, NwDst2, NwProto2).

% test rule 2:
% dest = 17, switch = 1. domain issue here. needs special handling: see switchHasPorts relation.
% emit(1,2,3,17,5,6,7,8, LocSw2, LocPt2, DlSrc2, DlDst2, DlTyp2, NwSrc2, NwDst2, NwProto2).
% note that if we comment out the port != port2 part, it works fine, giving _hblahblahblah for the output port.